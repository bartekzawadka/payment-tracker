name: 'Build'

jobs:
    - job: Build
      displayName: 'Build'
      variables:
        BuildConfiguration: Release
        appVersion: '1.0.0'
      workspace: 
        clean: all
      pool:
        name: Azure Pipelines
        vmImage: ubuntu-20.04
      steps:
      - script: |
          PACKAGE_PATH = "$(Build.SourcesDirectory)/src/app/payment-tracker/package.json"
          #PACKAGE_VERSION=$(node -p -e "require('$PACKAGE_PATH').version")
          PACKAGE_VERSION=grep version $PACKAGE_PATH | sed 's/.*"version": "\(.*\)".*/\1/'
          echo '##vso[task.setvariable variable=appVersion]$PACKAGE_VERSION'
        displayName: Get app version
      - task: qetza.replacetokens.replacetokens-task.replacetokens@3
        displayName: 'Replace tokens in **/environment.prod.ts'
        inputs:
            rootDirectory: src
            targetFiles: '**/environment.prod.ts'
            writeBOM: false
            tokenPrefix: '##{'
            tokenSuffix: '}##'

      - task: UseDotNet@2
        inputs:
          packageType: 'sdk'
          version: '5.0.x'           

      - script: './build.sh --target compile --configuration $(BuildConfiguration) --host AzurePipelines'
        displayName: 'Run NUKE build'

      - task: Docker@2
        displayName: Build API image
        inputs:
          repository: $(apiImageName)
          command: build
          buildContext: $(Build.SourcesDirectory)/src/api/Payment.Tracker/Payment.Tracker.Api/bin/$(BuildConfiguration)/net5.0
          Dockerfile: $(Build.SourcesDirectory)/src/api/Payment.Tracker/Payment.Tracker.Api/Dockerfile
          tags: |
            $(appVersion)
            latest

      - task: Docker@2
        displayName: Build APP image
        inputs:
          repository: $(appImageName)
          command: build
          buildContext: $(Build.SourcesDirectory)/src/app/payment-tracker
          Dockerfile: $(Build.SourcesDirectory)/src/app/payment-tracker/Dockerfile
          tags: |
            $(appVersion)
            latest

      - task: Docker@2
        displayName: Publish API image
        inputs:
          containerRegistry: 'dockerhub-payment-tracker-api'
          repository: $(apiImageName)
          command: push

      - task: Docker@2
        displayName: Publish APP image
        inputs:
          containerRegistry: 'dockerhub-payment-tracker-api'
          repository: $(appImageName)
          command: push
